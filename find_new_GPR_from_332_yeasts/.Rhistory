library(readxl)
library(readr)
library(hongR)
source('main_function.R')
# panGenome annotation based on : https://www.genome.jp/tools/kaas/
# single-directional best hit to get the annotation
# It seems that two_directial best hit takes a very long time
panGenome_kegg1 <- read_excel("data/fasta1_kegg_SBH.xlsx", col_names = FALSE)
colnames(panGenome_kegg1) <- c('query','ko')
panGenome_kegg2 <- read_excel("data/fasta2_kegg_SBH.xlsx", col_names = FALSE)
colnames(panGenome_kegg2) <- c('query','ko')
panGenome_kegg3 <- read_excel("data/fasta3_kegg_SBH.xlsx", col_names = FALSE)
colnames(panGenome_kegg3) <- c('query','ko')
panGenome_kegg_annotation <- rbind.data.frame(panGenome_kegg1, panGenome_kegg2,panGenome_kegg3)
panGenome_kegg_annotation <- filter(panGenome_kegg_annotation, ko != "")
# input the s288c annotation
sce_kegg <- read.delim2("data/sce_ko_2019_8.txt", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
colnames(sce_kegg) <- c('query','ko')
sce_kegg <- filter(sce_kegg, ko != "")
# get the rxn based on KO
panGenome_Rxn_kegg1 <- getRXNfromKO(panGenome_kegg_annotation)
sce_Rxn_kegg1 <- getRXNfromKO(sce_kegg)
View(sce_Rxn_kegg1)
write.table(sce_Rxn_kegg1, "result/all s288c reactions from kegg.txt", row.names = FALSE, sep = "\t")
# this code is used to find the new GPR from panID based on kegg and eggnog web services
# if the new KO id occured in kegg database and eggnog, then the annotation from kegg will be used
#library(tidyverse)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
library(readr)
library(hongR)
source('main_function.R')
# panGenome annotation based on : https://www.genome.jp/tools/kaas/
# single-directional best hit to get the annotation
# It seems that two_directial best hit takes a very long time
panGenome_kegg1 <- read_excel("data/fasta1_kegg_SBH.xlsx", col_names = FALSE)
colnames(panGenome_kegg1) <- c('query','ko')
panGenome_kegg2 <- read_excel("data/fasta2_kegg_SBH.xlsx", col_names = FALSE)
colnames(panGenome_kegg2) <- c('query','ko')
panGenome_kegg3 <- read_excel("data/fasta3_kegg_SBH.xlsx", col_names = FALSE)
colnames(panGenome_kegg3) <- c('query','ko')
panGenome_kegg_annotation <- rbind.data.frame(panGenome_kegg1, panGenome_kegg2,panGenome_kegg3)
panGenome_kegg_annotation <- filter(panGenome_kegg_annotation, ko != "")
# input the s288c annotation
sce_kegg <- read.delim2("data/sce_ko_2019_8.txt", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
colnames(sce_kegg) <- c('query','ko')
sce_kegg <- filter(sce_kegg, ko != "")
# get the rxn based on KO
panGenome_Rxn_kegg1 <- getRXNfromKO(panGenome_kegg_annotation)
sce_Rxn_kegg1 <- getRXNfromKO(sce_kegg)
# find the new Rxn ID from panGenome
newRxnID <- setdiff(panGenome_Rxn_kegg1$rxn, sce_Rxn_kegg1$rxn)
index1 <- which(panGenome_Rxn_kegg1$rxn %in% newRxnID ==TRUE)
newRxn_panGenome_kegg <- panGenome_Rxn_kegg1[index1,]
# panGenome annotation based on : http://eggnogdb.embl.de/#/app/home
# it is quite detailed for the panGenome annotation from eggnog web service
# the results could the direct evidences for the article
# with the mapping onto BiGG, no new reactions were found for these new panID compared with mapping onto kegg database
# it may be due to the fact that the metabolic coverage in the bigg database is quite small
egg10 <- read.delim2("data/query_seqs.fa.emapper.annotations1", header = FALSE, sep = "\t",stringsAsFactors = FALSE)
egg20 <- read.delim2("data/query_seqs.fa.emapper.annotations2", header = FALSE, sep = "\t",stringsAsFactors = FALSE)
egg30 <- read.delim2("data/query_seqs.fa.emapper.annotations3", header = FALSE, sep = "\t",stringsAsFactors = FALSE)
header0 <- egg10[1,]
header0 <- unlist(header0)[1:17]
other_col <- c('annot lvl', 'matching OGs', 'Best OG', 'COG cat', 'description')
header_new <- c(header0, other_col)
egg10 <- egg10[-1,]
egg20 <- egg20[-1,]
egg30 <- egg30[-1,]
panGenome_eggnog <- rbind.data.frame(egg20, egg10, egg30)
colnames(panGenome_eggnog) <- header_new
# input the eggnog annotation for sce s288c
sce_eggnog <- read.delim2("data/sce288c.fa.emapper.annotations", header = FALSE, sep = "\t",stringsAsFactors = FALSE)
sce_eggnog <- sce_eggnog[-1,]
colnames(sce_eggnog) <- header_new
write.table(panGenome_eggnog, "result/panGenome_eggnog.txt", row.names = FALSE, sep = "\t")
#analysis the results mapping onto kegg database based on eggnog annotation
panGenome_eggnog1 <- select(panGenome_eggnog, query_name, KEGG_ko)
panGenome_eggnog1 <- filter(panGenome_eggnog1, KEGG_ko!="")
panGenome_eggnog1_rxn <- splitAndCombine(panGenome_eggnog1$KEGG_ko,panGenome_eggnog1$query,sep0 = ",")
colnames(panGenome_eggnog1_rxn) <- c('ko','query')
panGenome_eggnog1_rxn$ko <- str_replace_all(panGenome_eggnog1_rxn$ko, "ko:", "")
#Obtain the GPR from kegg database
panGenome_Rxn_eggnog1<- getRXNfromKO(panGenome_eggnog1_rxn)
#Obtain rxn connected with each panID
#panGenome_eggnog1<- getRXNfromKO(panGenome_eggnog1_rxn, outputRxn = FALSE)
#get the new rxn
#analysis the results mapping onto kegg database based on eggnog annotation
sce_eggnog1 <- select(sce_eggnog, query_name, KEGG_ko)
sce_eggnog1 <- filter(sce_eggnog1, KEGG_ko!="")
sce_eggnog1_rxn <- splitAndCombine(sce_eggnog1$KEGG_ko,sce_eggnog1$query,sep0 = ",")
colnames(sce_eggnog1_rxn) <- c('ko','query')
sce_eggnog1_rxn$ko <- str_replace_all(sce_eggnog1_rxn$ko, "ko:", "")
#Obtain the GPR from kegg database
sce_Rxn_eggnog1 <- getRXNfromKO(sce_eggnog1_rxn)
#Obtain rxn connected with each panID
#panGenome_eggnog1<- getRXNfromKO(panGenome_eggnog1_rxn, outputRxn = FALSE)
#get the new rxn
newRxnID <- setdiff(panGenome_Rxn_eggnog1$rxn, sce_Rxn_eggnog1$rxn)
index1 <- which(panGenome_Rxn_eggnog1$rxn %in% newRxnID ==TRUE)
newRxn_panGenome_eggnog <- panGenome_Rxn_eggnog1[index1,]
#comparsion between the new RXN obtained by kegg web service and eggnog gene annotation
#all reactions could be further divided into three types
kegg_only <- setdiff(newRxn_panGenome_kegg$rxn, newRxn_panGenome_eggnog$rxn)
eggnog_only <- setdiff(newRxn_panGenome_eggnog$rxn,newRxn_panGenome_kegg$rxn)
kegg_and_eggnog <- intersect(newRxn_panGenome_kegg$rxn, newRxn_panGenome_eggnog$rxn)
kegg_or_eggnog <- union(newRxn_panGenome_kegg$rxn, newRxn_panGenome_eggnog$rxn)
newRxn_panGenome_kegg$source <- "kegg_web"
newRxn_panGenome_eggnog$source <- "eggnog_web"
newRxn_all <-data.frame(rxnID=kegg_or_eggnog, stringsAsFactors = FALSE)
newRxn_all$type <- "NA"
kegg_only_index <- which(newRxn_all$rxn %in% kegg_only==TRUE)
eggnog_only_index <- which(newRxn_all$rxn %in% eggnog_only==TRUE)
both_index <-  which(newRxn_all$rxn %in% kegg_and_eggnog==TRUE)
newRxn_all$type[kegg_only_index] <- "kegg_only"
newRxn_all$type[eggnog_only_index] <- "eggnog_only"
newRxn_all$type[both_index] <- "eggnog_and_kegg"
newRxn_all$panID_kegg <- getMultipleReactionFormula(newRxn_panGenome_kegg$query,newRxn_panGenome_kegg$rxn,newRxn_all$rxnID)
newRxn_all$panID_eggnog <- getMultipleReactionFormula(newRxn_panGenome_eggnog$query,newRxn_panGenome_eggnog$rxn,newRxn_all$rxnID)
#save the result
write.table(sce_Rxn_kegg1, "result/all s288c reactions from kegg.txt", row.names = FALSE, sep = "\t")
write.table(newRxn_all, "result/newRxn_all based on kegg and eggnog annotation.txt", row.names = FALSE, sep = "\t")
View(sce_Rxn_kegg1)
# this code is used to find the new GPR from panID based on kegg and eggnog web services
# if the new KO id occured in kegg database and eggnog, then the annotation from kegg will be used
#library(tidyverse)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
library(readr)
library(hongR)
test <- sce_Rxn_kegg1[str_detect(sce_Rxn_kegg1$query,'YMR217W'), ]
View(test)
library(readxl)
library(stringr)
library(tidyverse)
library(hongR)
sce_biocyc <- read.delim2('data/biocyc_parameters_influence/biocyc_s288c_45_100/excelRxns.txt', header =TRUE, sep = "\t", stringsAsFactors = FALSE)
sce_biocyc <- read.delim2('data/biocyc_parameters_influence/biocyc_s288c_45_100/excelGenes.txt', header =TRUE, sep = "\t", stringsAsFactors = FALSE)
sce_biocyc <- read.table('data/biocyc_parameters_influence/biocyc_s288c_45_100/excelGenes.txt', header =TRUE, sep = "\t", stringsAsFactors = FALSE)
View(sce_biocyc)
View(sce_biocyc)
sce_biocyc <- read.table('data/biocyc_parameters_influence/biocyc_s288c_45_100/excelGenes.txt', header =FALSE, sep = "\t", stringsAsFactors = FALSE)
View(sce_biocyc)
gene <- sce_biocyc$V2
gene
gene <- unique(sce_biocyc$V2)
# this code is used to find the new GPR from panID based on EC number from eggnog web services annotation
# Revised by hongzhong 2019-8-12
#library(tidyverse)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
library(readr)
library(hongR)
source('main_function.R')
# panGenome annotation based on : http://eggnogdb.embl.de/#/app/home
# it is quite detailed for the panGenome annotation from eggnog web service
# the results could the direct evidences for the article
# with the mapping onto BiGG, no new reactions were found for these new panID compared with mapping onto kegg database
# it may be due to the fact that the metabolic coverage in the bigg database is quite small
egg10 <- read.delim2("data/query_seqs.fa.emapper.annotations1", header = FALSE, sep = "\t",stringsAsFactors = FALSE)
egg20 <- read.delim2("data/query_seqs.fa.emapper.annotations2", header = FALSE, sep = "\t",stringsAsFactors = FALSE)
egg30 <- read.delim2("data/query_seqs.fa.emapper.annotations3", header = FALSE, sep = "\t",stringsAsFactors = FALSE)
header0 <- egg10[1,]
header0 <- unlist(header0)[1:17]
other_col <- c('annot lvl', 'matching OGs', 'Best OG', 'COG cat', 'description')
header_new <- c(header0, other_col)
egg10 <- egg10[-1,]
egg20 <- egg20[-1,]
egg30 <- egg30[-1,]
panGenome_eggnog <- rbind.data.frame(egg20, egg10, egg30)
colnames(panGenome_eggnog) <- header_new
# input the eggnog annotation for sce s288c
sce_eggnog <- read.delim2("data/sce288c.fa.emapper.annotations", header = FALSE, sep = "\t",stringsAsFactors = FALSE)
sce_eggnog <- sce_eggnog[-1,]
colnames(sce_eggnog) <- header_new
#Establish relation between ec and gene
panGenome_eggnog1 <- select(panGenome_eggnog, query_name, EC)
panGenome_eggnog1 <- filter(panGenome_eggnog1, EC!="")
panGenome_eggnog1_EC <- splitAndCombine(panGenome_eggnog1$EC,panGenome_eggnog1$query,sep0 = ",")
colnames(panGenome_eggnog1_EC) <- c('EC','query')
sce_eggnog1 <- select(sce_eggnog, query_name, EC)
sce_eggnog1 <- filter(sce_eggnog1, EC!="")
sce_eggnog1_EC <- splitAndCombine(sce_eggnog1$EC,sce_eggnog1$query,sep0 = ",")
colnames(sce_eggnog1_EC) <- c('EC','query')
#new ec
newEC <- setdiff(panGenome_eggnog1_EC$EC, sce_eggnog1_EC$EC)
newEC_eggnog <- panGenome_eggnog1_EC[panGenome_eggnog1_EC$EC %in% newEC, ]
#save the result
write.table(newEC_eggnog, "result/new EC based eggnog annotation.txt", row.names = FALSE, sep = "\t")
# this code is used to find the new GPR from panID based on kegg and eggnog web services
# if the new KO id occured in kegg database and eggnog, then the annotation from kegg will be used
#library(tidyverse)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
library(readr)
library(hongR)
source('main_function.R')
# panGenome annotation based on : https://www.genome.jp/tools/kaas/
# single-directional best hit to get the annotation
# It seems that two_directial best hit takes a very long time
panGenome_kegg1 <- read_excel("data/fasta1_kegg_SBH.xlsx", col_names = FALSE)
colnames(panGenome_kegg1) <- c('query','ko')
panGenome_kegg2 <- read_excel("data/fasta2_kegg_SBH.xlsx", col_names = FALSE)
colnames(panGenome_kegg2) <- c('query','ko')
panGenome_kegg3 <- read_excel("data/fasta3_kegg_SBH.xlsx", col_names = FALSE)
colnames(panGenome_kegg3) <- c('query','ko')
panGenome_kegg_annotation <- rbind.data.frame(panGenome_kegg1, panGenome_kegg2,panGenome_kegg3)
panGenome_kegg_annotation <- filter(panGenome_kegg_annotation, ko != "")
# input the s288c annotation
sce_kegg <- read.delim2("data/sce_ko_2019_8.txt", header = FALSE, sep = "\t", stringsAsFactors = FALSE)
colnames(sce_kegg) <- c('query','ko')
sce_kegg <- filter(sce_kegg, ko != "")
# get the rxn based on KO
panGenome_Rxn_kegg1 <- getRXNfromKO(panGenome_kegg_annotation)
sce_Rxn_kegg1 <- getRXNfromKO(sce_kegg)
test <- sce_Rxn_kegg1[str_detect(sce_Rxn_kegg1$query,'YMR217W'), ]
# find the new Rxn ID from panGenome
newRxnID <- setdiff(panGenome_Rxn_kegg1$rxn, sce_Rxn_kegg1$rxn)
index1 <- which(panGenome_Rxn_kegg1$rxn %in% newRxnID ==TRUE)
newRxn_panGenome_kegg <- panGenome_Rxn_kegg1[index1,]
View(newRxn_panGenome_kegg)
View(newRxn_panGenome_kegg)
View(panGenome_kegg_annotation)
View(newRxn_panGenome_kegg)
rxn_newGene <- splitAndCombine(newRxn_panGenome_kegg$query, newRxn_panGenome_kegg$rxn, sep0 = ";")
length(unique(rxn_newGene$v1))
View(rxn_newGene)
unique(rxn_newGene$v1
)
# this code is used to find the new GPR from panID based on EC number from eggnog web services annotation
# Revised by hongzhong 2019-8-12
#library(tidyverse)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
library(readr)
library(hongR)
source('main_function.R')
# panGenome annotation based on : http://eggnogdb.embl.de/#/app/home
# it is quite detailed for the panGenome annotation from eggnog web service
# the results could the direct evidences for the article
# with the mapping onto BiGG, no new reactions were found for these new panID compared with mapping onto kegg database
# it may be due to the fact that the metabolic coverage in the bigg database is quite small
egg10 <- read.delim2("data/query_seqs.fa.emapper.annotations1", header = FALSE, sep = "\t",stringsAsFactors = FALSE)
egg20 <- read.delim2("data/query_seqs.fa.emapper.annotations2", header = FALSE, sep = "\t",stringsAsFactors = FALSE)
egg30 <- read.delim2("data/query_seqs.fa.emapper.annotations3", header = FALSE, sep = "\t",stringsAsFactors = FALSE)
header0 <- egg10[1,]
header0 <- unlist(header0)[1:17]
other_col <- c('annot lvl', 'matching OGs', 'Best OG', 'COG cat', 'description')
header_new <- c(header0, other_col)
egg10 <- egg10[-1,]
egg20 <- egg20[-1,]
egg30 <- egg30[-1,]
panGenome_eggnog <- rbind.data.frame(egg20, egg10, egg30)
colnames(panGenome_eggnog) <- header_new
# input the eggnog annotation for sce s288c
sce_eggnog <- read.delim2("data/sce288c.fa.emapper.annotations", header = FALSE, sep = "\t",stringsAsFactors = FALSE)
sce_eggnog <- sce_eggnog[-1,]
colnames(sce_eggnog) <- header_new
#Establish relation between ec and gene
panGenome_eggnog1 <- select(panGenome_eggnog, query_name, EC)
panGenome_eggnog1 <- filter(panGenome_eggnog1, EC!="")
panGenome_eggnog1_EC <- splitAndCombine(panGenome_eggnog1$EC,panGenome_eggnog1$query,sep0 = ",")
# this code is used to find the new GPR from panID based on EC number from eggnog web services annotation
# Revised by hongzhong 2019-8-12
#library(tidyverse)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
library(readr)
library(hongR)
source('main_function.R')
# panGenome annotation based on : http://eggnogdb.embl.de/#/app/home
# it is quite detailed for the panGenome annotation from eggnog web service
# the results could the direct evidences for the article
# with the mapping onto BiGG, no new reactions were found for these new panID compared with mapping onto kegg database
# it may be due to the fact that the metabolic coverage in the bigg database is quite small
egg10 <- read.delim2("data/query_seqs.fa.emapper.annotations1", header = FALSE, sep = "\t",stringsAsFactors = FALSE)
egg20 <- read.delim2("data/query_seqs.fa.emapper.annotations2", header = FALSE, sep = "\t",stringsAsFactors = FALSE)
egg30 <- read.delim2("data/query_seqs.fa.emapper.annotations3", header = FALSE, sep = "\t",stringsAsFactors = FALSE)
header0 <- egg10[1,]
header0 <- unlist(header0)[1:17]
other_col <- c('annot lvl', 'matching OGs', 'Best OG', 'COG cat', 'description')
header_new <- c(header0, other_col)
egg10 <- egg10[-1,]
egg20 <- egg20[-1,]
egg30 <- egg30[-1,]
panGenome_eggnog <- rbind.data.frame(egg20, egg10, egg30)
colnames(panGenome_eggnog) <- header_new
# input the eggnog annotation for sce s288c
sce_eggnog <- read.delim2("data/sce288c.fa.emapper.annotations", header = FALSE, sep = "\t",stringsAsFactors = FALSE)
sce_eggnog <- sce_eggnog[-1,]
colnames(sce_eggnog) <- header_new
#Establish relation between ec and gene
panGenome_eggnog1 <- select(panGenome_eggnog, query_name, EC)
panGenome_eggnog1 <- filter(panGenome_eggnog1, EC!="")
panGenome_eggnog1_EC <- splitAndCombine(panGenome_eggnog1$EC,panGenome_eggnog1$query,sep0 = ",")
colnames(panGenome_eggnog1_EC) <- c('EC','query')
sce_eggnog1 <- select(sce_eggnog, query_name, EC)
sce_eggnog1 <- filter(sce_eggnog1, EC!="")
sce_eggnog1_EC <- splitAndCombine(sce_eggnog1$EC,sce_eggnog1$query,sep0 = ",")
colnames(sce_eggnog1_EC) <- c('EC','query')
#new ec
newEC <- setdiff(panGenome_eggnog1_EC$EC, sce_eggnog1_EC$EC)
newEC_eggnog <- panGenome_eggnog1_EC[panGenome_eggnog1_EC$EC %in% newEC, ]
#save the result
write.table(newEC_eggnog, "result/new EC based eggnog annotation.txt", row.names = FALSE, sep = "\t")
View(newEC_eggnog)
length(unique(newEC_eggnog$query))
# Also we can get the new kegg reactions directly from eggnog annotation
#Establish relation between kegg RXN and gene
panGenome_eggnog1 <- select(panGenome_eggnog, query_name, KEGG_Reaction)
panGenome_eggnog1 <- filter(panGenome_eggnog1, KEGG_Reaction!="")
panGenome_eggnog1_KEGG_Reaction <- splitAndCombine(panGenome_eggnog1$KEGG_Reaction,panGenome_eggnog1$query_name,sep0 = ",")
colnames(panGenome_eggnog1_KEGG_Reaction) <- c('KEGG_Reaction','query')
View(panGenome_eggnog1_KEGG_Reaction)
# Also we can get the new kegg reactions directly from eggnog annotation
#Establish relation between kegg RXN and gene
panGenome_eggnog1 <- select(panGenome_eggnog, query_name, KEGG_Reaction)
panGenome_eggnog1 <- filter(panGenome_eggnog1, KEGG_Reaction!="")
panGenome_eggnog1_KEGG_Reaction <- splitAndCombine(panGenome_eggnog1$KEGG_Reaction,panGenome_eggnog1$query_name,sep0 = ",")
colnames(panGenome_eggnog1_KEGG_Reaction) <- c('KEGG_Reaction','query')
View(panGenome_eggnog1_KEGG_Reaction)
sce_eggnog1 <- select(sce_eggnog, query_name, KEGG_Reaction)
sce_eggnog1 <- filter(sce_eggnog1, KEGG_Reaction!="")
sce_eggnog1_KEGG_Reaction <- splitAndCombine(sce_eggnog1$KEGG_Reaction,sce_eggnog1$query_name,sep0 = ",")
colnames(sce_eggnog1_KEGG_Reaction) <- c('KEGG_Reaction','query')
#new kegg rxn
newKEGG_Reaction <- setdiff(panGenome_eggnog1_KEGG_Reaction$KEGG_Reaction, sce_eggnog1_EC$KEGG_Reaction)
newKEGG_Reaction_eggnog <- panGenome_eggnog1_KEGG_Reaction[panGenome_eggnog1_KEGG_Reaction$KEGG_Reaction %in% newKEGG_Reaction, ]
# further establish the map between rxn and genes
# further establish the map between rxn and genes
length(unique(newKEGG_Reaction_eggnog$query))
# Note :
# based on eggnog web service, there are 7436 panIDs connect with 1873 new reactions. So many!!
annotation_s288c <- read_excel("data/all_gene_yeast with annotation from different database.xlsx")
#library(tidyverse)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
library(readr)
library(hongR)
source('main_function.R')
annotation_s288c <- read_excel("data/all_gene_yeast with annotation from different database.xlsx")
View(annotation_s288c)
ec_combine <- paste(annotation_s288c$ec_SGD, annotation_s288c$ec_uniprot, sep = ";")
ec_combine
ec_combine0 <- str_split(ec_combine, ";")
ec_combine0 <- unlist(str_split(ec_combine, ";"))
ec_combine0 <- ec_combine0[ec_combine0 !="NA"]
ec_combine0
# this code is used to find the new GPR from panID based on EC number predicted by deepec
# https://bitbucket.org/account/user/kaistsystemsbiology/projects/DEEP
# Then we compared the predicted EC with annotation of EC for s288c from SGD and uniprot
# Revised by hongzhong 2019-8-12
#library(tidyverse)
library(dplyr)
library(tidyr)
library(stringr)
library(readxl)
library(readr)
library(hongR)
source('main_function.R')
annotation_s288c <- read_excel("data/all_gene_yeast with annotation from different database.xlsx")
ec_combine <- paste(annotation_s288c$ec_SGD, annotation_s288c$ec_uniprot, sep = ";")
ec_combine0 <- unlist(str_split(ec_combine, ";"))
ec_combine0 <- ec_combine0[ec_combine0 !="NA"]
ec_p1 <- read.table('data/EC_number_annotation_deepec/part1/DeepEC_Result.txt')
ec_p1 <- read.delim2('data/EC_number_annotation_deepec/part1/DeepEC_Result.txt')
View(ec_p1)
ec_p1 <- read.delim2('data/EC_number_annotation_deepec/part1/DeepEC_Result.txt')
ec_p2 <- read.delim2('data/EC_number_annotation_deepec/part2/DeepEC_Result.txt')
ec_p3 <- read.delim2('data/EC_number_annotation_deepec/part3/DeepEC_Result.txt')
ec_p4 <- read.delim2('data/EC_number_annotation_deepec/part4/DeepEC_Result.txt')
ec_p5 <- read.delim2('data/EC_number_annotation_deepec/part5/DeepEC_Result.txt')
ec_p6 <- read.delim2('data/EC_number_annotation_deepec/part6/DeepEC_Result.txt')
View(ec_p1)
ec_deepec <- rbind.data.frame(ec_p1,ec_p2,ec_p3,ec_p4,ec_p5,ec_p6)
View(ec_deepec)
annotation_s288c <- read_excel("data/all_gene_yeast with annotation from different database.xlsx")
ec_combine <- paste(annotation_s288c$ec_SGD, annotation_s288c$ec_uniprot, sep = ";")
ec_combine0 <- unlist(str_split(ec_combine, ";"))
ec_combine0 <- unique(ec_combine0[ec_combine0 !="NA"])
ec_deepec <- rbind.data.frame(ec_p1,ec_p2,ec_p3,ec_p4,ec_p5,ec_p6)
View(ec_deepec)
length(unique(ec_deepec$Predicted.EC.number))
ec_combine0
unique(ec_deepec$Predicted.EC.number)
ec_p1 <- read.delim2('data/EC_number_annotation_deepec/part1/DeepEC_Result.txt', stringsAsFactors = FALSE)
ec_p2 <- read.delim2('data/EC_number_annotation_deepec/part2/DeepEC_Result.txt', stringsAsFactors = FALSE)
ec_p3 <- read.delim2('data/EC_number_annotation_deepec/part3/DeepEC_Result.txt', stringsAsFactors = FALSE)
ec_p4 <- read.delim2('data/EC_number_annotation_deepec/part4/DeepEC_Result.txt', stringsAsFactors = FALSE)
ec_p5 <- read.delim2('data/EC_number_annotation_deepec/part5/DeepEC_Result.txt', stringsAsFactors = FALSE)
ec_p6 <- read.delim2('data/EC_number_annotation_deepec/part6/DeepEC_Result.txt', stringsAsFactors = FALSE)
ec_deepec <- rbind.data.frame(ec_p1,ec_p2,ec_p3,ec_p4,ec_p5,ec_p6)
unique(ec_deepec$Predicted.EC.number)
length(unique(ec_deepec$Predicted.EC.number))
View(ec_deepec)
ec_deepec$Predicted.EC.number <- str_replace_all(ec_deepec$Predicted.EC.number, "EC:", "")
View(ec_deepec)
length(unique(ec_deepec$Predicted.EC.number))
setdiff(ec_deepec$Predicted.EC.number, ec_combine0)
setdiff(ec_combine0, ec_deepec$Predicted.EC.number)
newEC <- setdiff(ec_deepec$Predicted.EC.number, ec_combine0)
geneNewEC <- ec_deepec[ec_deepec$Predicted.EC.number %in% newEC, ]
View(geneNewEC)
annotation_s288c <- read_excel("data/all_gene_yeast with annotation from different database.xlsx")
ec_combine <- paste(annotation_s288c$ec_SGD, annotation_s288c$ec_uniprot, sep = ";")
ec_combine0 <- unlist(str_split(ec_combine, ";"))
ec_combine0  <- str_trim(ec_combine0, side = "both")
ec_combine0 <- unique(ec_combine0[ec_combine0 !="NA"]) # total 957 unique enzymes
ec_p1 <- read.delim2('data/EC_number_annotation_deepec/part1/DeepEC_Result.txt', stringsAsFactors = FALSE)
ec_p2 <- read.delim2('data/EC_number_annotation_deepec/part2/DeepEC_Result.txt', stringsAsFactors = FALSE)
ec_p3 <- read.delim2('data/EC_number_annotation_deepec/part3/DeepEC_Result.txt', stringsAsFactors = FALSE)
ec_p4 <- read.delim2('data/EC_number_annotation_deepec/part4/DeepEC_Result.txt', stringsAsFactors = FALSE)
ec_p5 <- read.delim2('data/EC_number_annotation_deepec/part5/DeepEC_Result.txt', stringsAsFactors = FALSE)
ec_p6 <- read.delim2('data/EC_number_annotation_deepec/part6/DeepEC_Result.txt', stringsAsFactors = FALSE)
ec_deepec <- rbind.data.frame(ec_p1,ec_p2,ec_p3,ec_p4,ec_p5,ec_p6)
ec_deepec$Predicted.EC.number <- str_replace_all(ec_deepec$Predicted.EC.number, "EC:", "")
length(unique(ec_deepec$Predicted.EC.number))
newEC <- setdiff(ec_deepec$Predicted.EC.number, ec_combine0)
setdiff(ec_deepec$Predicted.EC.number, ec_combine0)
geneNewEC <- ec_deepec[ec_deepec$Predicted.EC.number %in% newEC, ]
View(geneNewEC)
setdiff(ec_deepec$Predicted.EC.number, ec_combine0)
setdiff(ec_combine0, ec_deepec$Predicted.EC.number)
geneNewEC <- ec_deepec[ec_deepec$Predicted.EC.number %in% newEC, ]
View(geneNewEC)
# further remove the new EC from s288c
geneNewEC <- geneNewEC[!str_detect(geneNewEC$Query.ID, "Saccharomyces_cerevisiae"), ]
View(geneNewEC)
write.table(geneNewEC, "result/newEC_predicted_by_deep_ec_for_pan_genome.txt", row.names = FALSE, sep = "\t")
View(ec_deepec)
View(geneNewEC)
library(readxl)
library(stringr)
library(tidyverse)
library(hongR)
# RAVEM-biocyc
pan_biocyc <- read.delim2('data/panYeast2_biocyc/excelRxns.txt', header =TRUE, sep = "\t", stringsAsFactors = FALSE)
sce_biocyc <- read.delim2('data/s288c_biocyc/excelRxns.txt', header =TRUE, sep = "\t", stringsAsFactors = FALSE)
newRxn_biocyc <- setdiff(pan_biocyc$ID, sce_biocyc$ID)
newRxn_biocyc0 <- pan_biocyc[pan_biocyc$ID %in% newRxn_biocyc,]
which(duplicated(newRxn_biocyc0$ID))
# RAVEN-KEGG
#pan_kegg <- scan('data/panYeast2_kegg/excelRxns.txt', sep = "\n", what = "complex")
#pan_kegg[1] <- str_replace_all(pan_kegg[1], "#", '')
#writeLines(pan_kegg, file("data/panYeast2_kegg/excelRxns"))
infile1 = 'data/panYeast2_kegg/excelRxns.txt'
infile2 = 'data/s288c_kegg/excelRxns.txt'
InputKeggModelRaven <- function(infile) {
# this function is used to preprocess the kegg model obtained by RAVEN
# input
# infile: the directory
input_kegg <- read.delim2(infile, row.names = NULL, sep = "\t", stringsAsFactors = FALSE)
# remove the first column and rename all columns
input_kegg <- input_kegg[-c(1)]
old_columns <- colnames(input_kegg)
new_columns <- old_columns[-c(1, 2)]
new_columns <- c(c("ID"), new_columns, c("other"))
colnames(input_kegg) <- new_columns
return(input_kegg)
}
pan_kegg <- InputKeggModelRaven(infile1)
sce_kegg <- InputKeggModelRaven(infile2)
newRxn_kegg <- setdiff(pan_kegg$ID, sce_kegg$ID)
newRxn_kegg0 <- pan_kegg[pan_kegg$ID %in% newRxn_kegg,]
# give the mnxid for all the new reactions
write.table(newRxn_biocyc0, "result/newRxn_biocyc_RAVEN.txt", row.names = FALSE, sep = "\t")
write.table(newRxn_kegg0, "result/newRxn_kegg_RAVEN.txt", row.names = FALSE, sep = "\t")
which(duplicated(newRxn_biocyc0$ID))
# when the pidenty = 55%, bitscore = 110
pan_biocyc <- read.delim2('data/panYeast2_biocyc_55_110/excelRxns.txt', header =TRUE, sep = "\t", stringsAsFactors = FALSE)
# when the pidenty = 55%, bitscore = 110
pan_biocyc <- read_table2('data/panYeast2_biocyc_55_110/excelRxns.txt', header =TRUE, sep = "\t", stringsAsFactors = FALSE)
# when the pidenty = 55%, bitscore = 110
pan_biocyc <- read_table2('data/panYeast2_biocyc_55_110/excelRxns.txt')
View(pan_biocyc)
newRxn_biocyc <- setdiff(pan_biocyc$`#`, sce_biocyc$ID)
# RAVEM-biocyc
# This is result using the defalut paramters, that is pidenty = 45%, bitscore = 100
pan_biocyc <- read.delim2('data/panYeast2_biocyc/excelRxns.txt', header =TRUE, sep = "\t", stringsAsFactors = FALSE)
sce_biocyc <- read.delim2('data/s288c_biocyc/excelRxns.txt', header =TRUE, sep = "\t", stringsAsFactors = FALSE)
newRxn_biocyc <- setdiff(pan_biocyc$ID, sce_biocyc$ID)
# when the pidenty = 55%, bitscore = 110
pan_biocyc <- read_table2('data/panYeast2_biocyc_55_110/excelRxns.txt')
newRxn_biocyc <- setdiff(pan_biocyc$`#`, sce_biocyc$ID)
newRxn_biocyc0_55_110 <- pan_biocyc[pan_biocyc$ID %in% newRxn_biocyc,]
newRxn_biocyc0_55_110 <- pan_biocyc[pan_biocyc$`#` %in% newRxn_biocyc,]
View(newRxn_biocyc0_55_110)
pan_biocyc <- read.delim2('data/panYeast2_biocyc_55_110/excelRxns.txt', header =TRUE, sep = "\t", stringsAsFactors = FALSE)
View(pan_biocyc)
# when the pidenty = 55%, bitscore = 110
pan_biocyc <- read.delim2('data/panYeast2_biocyc_55_110/excelRxns.txt', header =TRUE, sep = "\t", stringsAsFactors = FALSE)
newRxn_biocyc <- setdiff(pan_biocyc$ID, sce_biocyc$ID)
newRxn_biocyc0_55_110 <- pan_biocyc[pan_biocyc$ID %in% newRxn_biocyc,]
View(newRxn_biocyc0_55_110)
write.table(newRxn_biocyc0, "result/newRxn_biocyc_RAVEN.txt", row.names = FALSE, sep = "\t")
write.table(newRxn_biocyc0_55_110, "result/newRxn_biocyc_RAVEN_55_110.txt", row.names = FALSE, sep = "\t")
write.table(newRxn_kegg0, "result/newRxn_kegg_RAVEN.txt", row.names = FALSE, sep = "\t")
View(newRxn_biocyc0_55_110)
